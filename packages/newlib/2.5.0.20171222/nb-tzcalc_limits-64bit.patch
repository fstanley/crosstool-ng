--- newlib/newlib/libc/time/tzcalc_limits.c
+++ newlib/newlib/libc/time/tzcalc_limits.c
@@ -11,15 +11,14 @@
 #include "local.h"
 
 int
-_DEFUN (__tzcalc_limits, (year),
-	int year)
+_DEFUN (__tzcalc_limits, (year),int year)
 {
-  int days, year_days, years;
-  int i, j;
+  time_t  days, year_days, years;
+  time_t i, j;
+
   __tzinfo_type *_CONST tz = __gettzinfo ();
 
-  if (year < EPOCH_YEAR)
-    return 0;
+  if (year < EPOCH_YEAR) return 0;
 
   tz->__tzyear = year;
 
@@ -56,19 +55,18 @@
 	  m_wday = (EPOCH_WDAY + days) % DAYSPERWEEK;
 
 	  wday_diff = tz->__tzrule[i].d - m_wday;
-	  if (wday_diff < 0)
-	    wday_diff += DAYSPERWEEK;
+	  if (wday_diff < 0) wday_diff += DAYSPERWEEK;
+
 	  m_day = (tz->__tzrule[i].n - 1) * DAYSPERWEEK + wday_diff;
 
-	  while (m_day >= ip[j-1])
-	    m_day -= DAYSPERWEEK;
+	  while (m_day >= ip[j-1]) m_day -= DAYSPERWEEK;
 
 	  days += m_day;
 	}
 
       /* store the change-over time in GMT form by adding offset */
-      tz->__tzrule[i].change = days * SECSPERDAY +
-      tz->__tzrule[i].s + tz->__tzrule[i].offset;
+
+      tz->__tzrule[i].change = (time_t)(days * SECSPERDAY) + (time_t)(tz->__tzrule[i].s + tz->__tzrule[i].offset);
     }
 
   tz->__tznorth = (tz->__tzrule[0].change < tz->__tzrule[1].change);
